// global style variables
$color-primary: #2F86F6;
$font-body-large: 0.28rem;
$font-body-normal: 0.26rem;
$font-caption-large: 0.36rem;
$font-minor-normal: 0.2rem;
$font-weight-normal: 400;
$font-weight-medium: 500;
$color-border-element: #C5CAD5;
$color-text-base: #111A34;
$color-text-base-inverse: #FFF;
$color-text-error: #FF5257;
$color-bg-base: #F9FAFB;
$color-text-body: #41485D;
$color-text-disabled: #C5CAD5;
$color-bg-inverse: #FFF;
$color-bg-disabled: #E2E4EA;
$color-mask: rgba(37, 38, 45, 0.7);
$radius-normal: 4px;
$radius-circle: 50%;
$h-gap-xs: 0.08rem;
$h-gap-md: 0.2rem;
$opacity-disabled: 0.3;
$button-primary-fill: $color-primary;
$button-default-fill: $color-bg-inverse;
$button-disabled-fill: $color-bg-disabled;
$button-warning-fill: $color-text-error;
$button-primary-active-fill: #2A78DC;
$button-default-active-fill: $color-bg-base;
$button-warning-active-fill: #E9424F;
$button-primary-plain-active-fill: #EAF2FE;
$button-default-plain-active-fill: $color-bg-base;
$button-warning-plain-active-fill: #FAC3C6;
$button-default-color: $color-text-body;
$button-primary-color: $color-text-base-inverse;
$button-disabled-color: $color-text-base-inverse;
$button-warning-color: $color-text-base-inverse;
$button-default-plain-color: $button-default-color;
$button-primary-plain-color: $button-primary-fill;
$button-warning-plain-color: $button-warning-fill;
$button-disabled-plain-color: $color-text-disabled;
$button-height: 1rem;
$button-font-size: $font-caption-large;
$button-font-weight: $font-weight-medium;
$button-small-height: 0.64rem;
$button-small-font-size: $font-body-large;
$button-radius: $radius-normal;
$landscape-width: 5.4rem;
$landscape-fullscreen-bg: $color-bg-inverse;
$landscape-zindex: 1600;
$tag-color: $color-primary;
$tag-fillet-radius: 0.02rem;
$tag-large-font-size: $font-body-normal;
$tag-small-font-size: $font-minor-normal;
$tag-tiny-font-size: 0.12rem;
$popup-title-bar-radius: 8px;
$popup-title-bar-radius-large: 0.4rem;
$popup-mask-bg: $color-mask;
$popup-zindex: 1000;
$font-family-normal: "Helvetica Neue",Helvetica,"PingFang SC","Hiragino Sans GB","Microsoft YaHei",Arial,sans-serif;
$icon-font-family: url("/assets/iconfont.woff") format("woff"), url("/assets/iconfont.ttf") format("truetype");
$toast-fill: rgba(65, 72, 93, .77);
$toast-font-size: $font-body-large;
$toast-color: #FFF;
$toast-radius: $radius-normal;
$toast-padding: 0.2rem 0.3rem;
$toast-zindex: 1700;

// common util styles
@mixin absolute-pos($t: 0, $r: 0, $b: 0, $l: 0) {
  top: $t;
  right: $r;
  bottom: $b;
  left: $l;
}

@mixin fixed-pos($t: 0, $r: 0, $b: 0, $l: 0) {
  @include absolute-pos($t, $r, $b, $l);
}

@mixin block() {
  float: left;
  width: 100%;
}

@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin word-break() {
  word-break: break-all;
  word-wrap: break-word;
}

@mixin word-ellipsis() {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin hairline-common($direction) {
  content: '';
  position: absolute;
  z-index: 2;
  transform-origin: 100% 50%;
  @if $direction == top {
    transform: scaleY(0.5) translateY(-100%);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33) translateY(-100%);
    }
  } @else if $direction == bottom {
    transform: scaleY(0.5) translateY(100%);
    @media (min-resolution: 3dppx) {
      transform: scaleY(0.33) translateY(100%);
    }
  } @else if $direction == left {
    transform: scaleX(0.5) translateX(-100%);
    @media (min-resolution: 3dppx) {
      transform: scaleX(0.33) translateX(-100%);
    }
  } @else if $direction == right {
    transform: scaleX(0.5) translateX(100%);
    @media (min-resolution: 3dppx) {
      transform: scaleX(0.33) translateX(100%);
    }
  }
}

@mixin hairline($direction: all, $color: color-border-base, $radius: 0, $size: border-width-base) {
  @if $direction == top {
    &::after {
                 
      @include hairline-common($direction);
      top: 0;
      left: 0;
      right: auto;
      bottom: auto;
      width: 100%;
      border-top: solid $size $color;
      transform-origin: 50% 0;
    }
  } @else if $direction == bottom {
    &::before {
                        
      @include hairline-common($direction);
      bottom: 0;
      left: 0;
      right: auto;
      top: auto;
      width: 100%;
      border-bottom: solid $size $color;
      transform-origin: 50% 100%;
    }
  } @else if $direction == left {
    &::after {
                        
      @include hairline-common($direction);
      top: 0;
      left: 0;
      right: auto;
      bottom: auto;
      border-left: solid $size $color;
      height: 100%;
      transform-origin: 0 50%;
    }
  } @else if $direction == right {
    &::before {
                        
      @include hairline-common($direction);
      top: 0;
      right: 0;
      left: auto;
      bottom: auto;
      border-right: solid $size $color;
      height: 100%;
      transform-origin: 100% 50%;
    }
  } @else {
    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: auto;
      bottom: auto;
      width: 200%;
      height: 200%;
      border: solid $size $color;
      box-sizing: border-box;
      transform-origin: 0 0;
      transform: scale(0.5);
      z-index: 2;
      @if $radius is a 'unit' {
        border-radius: $radius * 2;
      } @else {
        border-radius: "calc(%s * 2)" % $radius;
      }
    }
  }
}

@mixin remove-hairline($direction: all) {
  @if $direction == top {
    &::after {
      display: none;
    }
  } @else if $direction == bottom {
    &::before {
      display: none;
    }
  } @else if $direction == left {
    &::after {
      display: none;
    }
  } @else if $direction == right {
    &::before {
      display: none;
    }
  } @else {
    &::after {
      display: none;
    }
  }
}

@mixin svg-background($svg) {
  background-image: url($svg);
}

@mixin vertical-height($height) {
  height: $height;
  line-height: $height;
}

@mixin placeHolder() {
  animation-duration: 2s;
  animation-fill-mode: forwards;
  animation-iteration-count: infinite;
  animation-name: placeHolderShimmer;
  animation-timing-function: linear;
  background: linear-gradient(to right, #f3f3f6 8%, #f8faff 18%, #f3f3f6 33%);
  background-size: 10rem 1.04rem;
}

// common transition styles
.v-bounce {
  &-enter-active {
    animation: bounce-in 300ms linear;
  }
  &-leave-active {
    animation: zoom-out 250ms linear;
  }
}

.v-zoom {
  &-enter,
  &-leave-to {
    opacity: 0.01;
    transform: scale(0.75);
  }
  &-enter-active {
    transition: all 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    transition: all 250ms linear;
  }
}

.v-punch {
  &-enter,
  &-leave-to {
    opacity: 0.01;
    transform: scale(1.35);
  }
  &-enter-active {
    transition: all 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    transition: all 250ms linear;
  }
}

.v-slide-up {
  &-enter,
  &-leave-to {
    transform: translate3d(0, 100%, 0);
  }
  &-enter-active {
    transition: transform 300ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
  &-leave-active {
    transition: transform 250ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
}

.v-slide-right {
  &-enter,
  &-leave-to {
    transform: translate3d(-100%, 0, 0);
  }
  &-enter-active {
    transition: transform 300ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
  &-leave-active {
    transition: transform 250ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
}

.v-slide-left {
  &-enter,
  &-leave-to {
    transform: translate3d(100%, 0, 0);
  }
  &-enter-active {
    transition: transform 300ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
  &-leave-active {
    transition: transform 250ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
}

.v-slide-down {
  &-enter,
  &-leave-to {
    transform: translate3d(0, -100%, 0);
  }
  &-enter-active {
    transition: transform 300ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
  &-leave-active {
    transition: transform 250ms cubic-bezier(0.165, 0.84, 0.44, 1);
  }
}

.v-fade {
  &-enter,
  &-leave-to {
    opacity: 0.01;
  }
  &-enter-active {
    transition: opacity 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    transition: opacity 250ms linear;
  }
}

.v-fade-up {
  &-enter,
  &-leave-to {
    opacity: 0.01;
    transform: translate3d(0, 20%, 0);
  }
  &-enter-active {
    transition: all 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    transition: all 250ms linear;
  }
}

.v-fade-down {
  &-enter,
  &-leave-to {
    opacity: 0.01;
    transform: translate3d(0, -20%, 0);
  }
  &-enter-active {
    transition: all 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    transition: all 250ms linear;
  }
}

.v-fade-right {
  &-enter,
  &-leave-to {
    opacity: 0.01;
    transform: translate3d(-20%, 0, 0);
  }
  &-enter-active {
    transition: all 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    transition: all 250ms linear;
  }
}

.v-fade-left {
  &-enter,
  &-leave-to {
    opacity: 0.01;
    transform: translate3d(20%, 0, 0);
  }
  &-enter-active {
    transition: all 300ms cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    transition: all 250ms linear;
  }
}

.v-fly {
  &-enter-active {
    animation: fly-in 600ms;
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  &-leave-active {
    animation: zoom-out 250ms;
  }
}

@keyframes fly-in {
  0% {
    opacity: 0.5;
    transform: scale(0.5) translate3d(0, 0.5rem, 0);
  }
  45% {
    opacity: 1;
    transform: scale(1.05) translate3d(0, -0.5rem, 0);
  }
  100% {
    transform: scale(1) translate3d(0, 0, 0);
  }
}

@keyframes bounce-in {
  0% {
    transform: scale(0.5);
  }
  45% {
    transform: scale(1.05);
  }
  80% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes zoom-out {
  to {
    opacity: 0.01;
    transform: scale(0.75);
  }
}

@keyframes placeHolderShimmer {
  0% {
    background-position: -4.68rem 0;
  }
  100% {
    background-position: 4.68rem 0;
  }
}
